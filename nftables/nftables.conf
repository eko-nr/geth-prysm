#!/usr/sbin/nft -f

flush ruleset

table inet filter {
  # ===== Reusable sets =====
  # Declare an empty set without 'elements = { }' to avoid parse errors on some versions.
  set rpc_allow_ips {
    type ipv4_addr
  }

  set prysm_monitor_ports {
    type inet_service
    elements = { 4000, 3500 }
  }

  chain input {
    type filter hook input priority 0; policy drop;

    # ===== Allow basic traffic =====
    iif lo accept
    ct state established,related accept

    # ===== SSH =====
    tcp dport 22 accept

    # ===== Ethereum P2P sync =====
    tcp dport 30303 accept
    udp dport 30303 accept

    # ===== Prysm libp2p (limit new connections) =====
    # Use 'ct state new ct count over N' to drop excess *new* conntracks only.
    tcp dport 13000 ct state new ct count over 2 drop
    tcp dport 13000 accept
    udp dport 12000 ct state new ct count over 2 drop
    udp dport 12000 accept

    # ===== Execution client RPC =====
    ip saddr 127.0.0.1 tcp dport 8545 accept
    ip saddr @rpc_allow_ips tcp dport 8545 accept

    # ===== WebSocket endpoint =====
    ip saddr 127.0.0.1 tcp dport 8546 accept
    ip saddr @rpc_allow_ips tcp dport 8546 accept

    # ===== Auth RPC (consensus client) =====
    ip saddr 127.0.0.1 tcp dport 8551 accept

    # ===== Prysm monitoring ports =====
    ip saddr 127.0.0.1 tcp dport @prysm_monitor_ports accept
    ip saddr @rpc_allow_ips tcp dport @prysm_monitor_ports accept

    # ===== ICMP diagnostics (v4 + v6) =====
    ip protocol icmp icmp type echo-request limit rate 10/second accept
    ip protocol icmp icmp type destination-unreachable accept
    ip protocol icmp icmp type time-exceeded accept

    meta l4proto icmpv6 icmpv6 type echo-request limit rate 10/second accept
    meta l4proto icmpv6 icmpv6 type destination-unreachable accept
    meta l4proto icmpv6 icmpv6 type time-exceeded accept

    # ===== Default deny =====
    drop
  }

  chain output {
    type filter hook output priority 0; policy accept;
  }

  chain forward {
    type filter hook forward priority 0; policy drop;
  }
}
